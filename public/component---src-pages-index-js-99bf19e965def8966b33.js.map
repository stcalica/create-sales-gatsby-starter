{"version":3,"sources":["webpack:///./src/layouts/MainLayout/index.js","webpack:///./src/components/Splash.js","webpack:///./src/components/ProductGrid/index.js","webpack:///./src/pages/index.js"],"names":["Content","Layout","Header","Footer","Sider","links","MainLayout","children","lineItems","useContext","StoreContext","store","checkout","query","render","data","ResponsiveNavBar","count","reduce","accum","prev","quantity","style","background","CrumpledBackground","fullscreen","width","height","margin","Splash","id","stlye","ProductGrid","allShopifyProduct","useStaticQuery","className","edges","map","price","node","handle","title","firstImage","images","firstVariant","variants","key","to","localFile","fluid","childImageSharp","alt","Intl","NumberFormat","undefined","currency","currencyCode","minimumFractionDigits","format","parseFloat","IndexPage","keywords","display"],"mappings":"iQAgB+BA,GAAYC,IAAnCC,OAAmCD,IAA3BE,OAA2BF,IAAnBG,MAAmBH,IAAZD,SAE3BK,EAAQ,CACV,CACA,MAAS,QACT,KAAQ,UAEV,CACE,MAAS,OACT,KAAQ,UAEV,CACE,MAAS,OACT,KAAQ,QACR,OAAS,IAkCIC,EA7BI,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACSC,EAAkBC,qBAAWC,KAAlDC,MAASC,SAAYJ,UAC7B,OACI,kBAAC,cAAD,CACEK,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACV,kBAAC,IAAD,KACK,kBAACC,EAAA,EAAD,CAAkBX,MAASA,EAAQY,MAAQT,EAAUU,QAAO,SAACC,EAAOC,GAAR,OAAmBD,EAAQC,EAAKC,WAAW,KACtG,kBAACrB,EAAD,CAASsB,MAAO,CAAEC,WAAW,OAAOC,IAAR,MACvBjB,Q,YClDfkB,EAAW,CACfC,MAAM,QACNC,OAAO,QACPC,OAAO,QASMC,EANA,WACb,OACI,6BAASC,GAAG,cAAcC,MAAON,KCiExBO,EArEK,WAAM,IAGRpB,EAAcH,qBAAWC,KAAjCC,MAAQC,SAERqB,EAAsBC,yBAAe,cAArCD,kBA0CR,OACE,yBAAKE,UAAU,QACZF,EAAkBG,MACfH,EAAkBG,MAAMC,KAAI,gBATnBC,EASmB,IAAGC,KAAQT,EAAX,EAAWA,GAAIU,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,MAAgBC,EAAvC,EAA8BC,OAA9B,GAA+DC,EAA/D,EAAoDC,SAApD,UAC5B,yBAAKV,UAAU,UAAUW,IAAKhB,GAC5B,kBAAC,OAAD,CAAMiB,GAAE,YAAcP,EAAd,KACLE,GAAcA,EAAWM,WACvB,kBAAC,IAAD,CACCb,UAAU,gBACVc,MAAOP,EAAWM,UAAUE,gBAAgBD,MAC5CE,IAAKX,KAGX,0BAAML,UAAU,aAAaM,GAC7B,0BAAMN,UAAU,cApBTG,EAoB+BM,EAAaN,MApBnCc,KAAKC,kBAAaC,EAAW,CACrDC,SAAU3C,EAAS4C,aAAe5C,EAAS4C,aAAe,MAC1DC,sBAAuB,EACvBnC,MAAO,aACNoC,OAAOC,WAAWrB,GAAgB,UAmB7B,mDC5CKsB,UAnBG,kBAChB,oCACE,kBAAC,IAAD,CAAKnB,MAAM,OAAOoB,SAAU,CAAC,MAAD,wEAC5B,kBAAC,EAAD,KACA,yBAAK1B,UAAU,mBACb,kBAAC,EAAD,MACA,6BAASL,GAAG,SACV,0CACA,gTAIF,6BAASA,GAAG,SAAQ,kBAAC,EAAD,OACpB,iCAAS,4BAAQR,MAAO,CAAEM,OAAO,YAAakC,QAAQ,SAAWhC,GAAG,iBAAgB,kBAAC,OAAD,CAAMiB,GAAG,aAAT","file":"component---src-pages-index-js-99bf19e965def8966b33.js","sourcesContent":["import React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\nimport { Layout } from 'antd'\n\nimport 'antd/dist/antd.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../../css/main.css'\n\nimport { StoreContext } from '~/context/StoreContext'\n\nimport Logo from '../../../resources/icons/logo.png'\nimport CrumpledBackground from '../../../resources/backgrounds/crumpled-white-paper.jpg'\nimport ResponsiveNavBar from '~/components/Navigation/ResponsiveNavBar'\n\nconst { Header, Footer, Sider, Content } = Layout\n\nlet links = [\n  {\n  'title': 'ABOUT',\n  'link': '#about'\n},\n{\n  'title': 'SHOP',\n  'link': '#store'\n},\n{\n  'title': 'CART',\n  'link': '/cart',\n  'badge': true\n}];\n\n\n\nconst MainLayout = ({ children }) => {\n  const { store: { checkout: { lineItems } } } = useContext(StoreContext)\n  return (\n      <StaticQuery\n        query={graphql`\n          query MainSiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <Layout>\n               <ResponsiveNavBar links ={ links } count={ lineItems.reduce((accum, prev) => ( accum + prev.quantity), 0) }/>\n                <Content style={{ background:`url(${CrumpledBackground})` }}>\n                    {children}\n                  </Content>\n            </Layout>\n        )}\n      />\n  )\n}\n\nMainLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default MainLayout\n","import React from 'react'\n\nconst fullscreen={\n  width:'100vw',\n  height:'100vh',\n  margin:'auto'\n}\n\nconst Splash = () => {\n  return(\n      <section id=\"main-splash\" stlye={fullscreen}></section>\n  )\n}\n\nexport default Splash\n","import React, { useContext } from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\n\nimport  { StoreContext } from '~/context/StoreContext'\nimport Image from 'gatsby-image'\n\nconst ProductGrid = () => {\n  // const store = useContext(StoreContext)\n  // const checkout = store.checkout\n  const { store: {checkout} } = useContext(StoreContext)\n\n  const { allShopifyProduct } = useStaticQuery(\n    graphql`\n      query {\n        allShopifyProduct(\n          sort: {\n            fields: [createdAt]\n            order: DESC\n          }\n        ) {\n          edges {\n            node {\n              id\n              title\n              handle\n              createdAt\n              images {\n                id\n                originalSrc\n                localFile {\n                  childImageSharp {\n                    fluid(maxWidth: 910) {\n                      ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                    }\n                  }\n                }\n              }\n              variants {\n                price\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const getPrice = price => Intl.NumberFormat(undefined, {\n    currency: checkout.currencyCode ? checkout.currencyCode : 'EUR',\n    minimumFractionDigits: 2,\n    style: 'currency',\n  }).format(parseFloat(price ? price : 0))\n\n  return (\n    <div className=\"grid\">\n      {allShopifyProduct.edges\n        ? allShopifyProduct.edges.map(({ node: { id, handle, title, images: [firstImage], variants: [firstVariant] } }) => (\n          <div className=\"product\" key={id} >\n            <Link to={`/product/${handle}/`}>\n              {firstImage && firstImage.localFile &&\n                (<Image\n                  className=\"product-image\"\n                  fluid={firstImage.localFile.childImageSharp.fluid}\n                  alt={handle}\n                />)}\n            </Link>\n            <span className=\"price-tag\">{title}</span>\n            <span className=\"price-tag\">{getPrice(firstVariant.price)}</span>\n          </div>\n        ))\n        : <p>No Products found!</p>}\n    </div>\n  )\n}\n\nexport default ProductGrid\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport MainLayout from '~/layouts/MainLayout'\nimport SEO from '~/components/seo'\nimport Splash from '~/components/Splash'\nimport ProductGrid from '~/components/ProductGrid'\n\nconst IndexPage = () => (\n  <>\n    <SEO title=\"Home\" keywords={[`edm`, `bass`, `raves`, `shop`, `merchandise`, `rave`, `warehouse`, `underground`]} />\n    <MainLayout>\n    <div className=\"content-wrapper\">\n      <Splash />\n      <section id=\"about\">\n        <h2> Our Deal </h2>\n        <p>Throwing parties is not all glamourous whether they are sweaty warehouse raves, bar shows, or large scale festivals. We take on all the sad work\n        so we can provide the best experience for the DJs, listeners and the adventourus.\n        For so many sad faces there many more smiles.</p>\n      </section>\n      <section id=\"store\"><ProductGrid /></section>\n      <section><button style={{ margin:'auto auto', display:'block' }} id=\"policy-button\"><Link to=\"/policies\">Returns & Private Policy</Link></button></section>\n    </div>\n    </MainLayout>\n  </>\n)\n\nexport default IndexPage\n"],"sourceRoot":""}